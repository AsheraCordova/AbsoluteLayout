//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\github_ashera\AbsoluteLayout\ios\src\main\java\r\android\widget\AbsoluteLayout.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "AbsoluteLayout.h"
#include "J2ObjC_source.h"
#include "View.h"
#include "ViewGroup.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@implementation ADAbsoluteLayout

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADAbsoluteLayout_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onMeasureWithInt:(int32_t)widthMeasureSpec
                 withInt:(int32_t)heightMeasureSpec {
  int32_t count = [self getChildCount];
  int32_t maxHeight = 0;
  int32_t maxWidth = 0;
  [self measureChildrenWithInt:widthMeasureSpec withInt:heightMeasureSpec];
  for (int32_t i = 0; i < count; i++) {
    ADView *child = [self getChildAtWithInt:i];
    if ([((ADView *) nil_chk(child)) getVisibility] != ADView_GONE) {
      int32_t childRight;
      int32_t childBottom;
      ADAbsoluteLayout_LayoutParams *lp = (ADAbsoluteLayout_LayoutParams *) cast_chk([child getLayoutParams], [ADAbsoluteLayout_LayoutParams class]);
      childRight = ((ADAbsoluteLayout_LayoutParams *) nil_chk(lp))->x_ + [child getMeasuredWidth];
      childBottom = lp->y_ + [child getMeasuredHeight];
      maxWidth = JavaLangMath_maxWithInt_withInt_(maxWidth, childRight);
      maxHeight = JavaLangMath_maxWithInt_withInt_(maxHeight, childBottom);
    }
  }
  maxWidth += mPaddingLeft_ + mPaddingRight_;
  maxHeight += mPaddingTop_ + mPaddingBottom_;
  maxHeight = JavaLangMath_maxWithInt_withInt_(maxHeight, [self getSuggestedMinimumHeight]);
  maxWidth = JavaLangMath_maxWithInt_withInt_(maxWidth, [self getSuggestedMinimumWidth]);
  [self setMeasuredDimensionWithInt:ADView_resolveSizeAndStateWithInt_withInt_withInt_(maxWidth, widthMeasureSpec, 0) withInt:ADView_resolveSizeAndStateWithInt_withInt_withInt_(maxHeight, heightMeasureSpec, 0)];
}

- (ADViewGroup_LayoutParams *)generateDefaultLayoutParams {
  return new_ADAbsoluteLayout_LayoutParams_initWithInt_withInt_withInt_withInt_(ADViewGroup_LayoutParams_WRAP_CONTENT, ADViewGroup_LayoutParams_WRAP_CONTENT, 0, 0);
}

- (void)onLayoutWithBoolean:(bool)changed
                    withInt:(int32_t)l
                    withInt:(int32_t)t
                    withInt:(int32_t)r
                    withInt:(int32_t)b {
  int32_t count = [self getChildCount];
  for (int32_t i = 0; i < count; i++) {
    ADView *child = [self getChildAtWithInt:i];
    if ([((ADView *) nil_chk(child)) getVisibility] != ADView_GONE) {
      ADAbsoluteLayout_LayoutParams *lp = (ADAbsoluteLayout_LayoutParams *) cast_chk([child getLayoutParams], [ADAbsoluteLayout_LayoutParams class]);
      int32_t childLeft = mPaddingLeft_ + ((ADAbsoluteLayout_LayoutParams *) nil_chk(lp))->x_;
      int32_t childTop = mPaddingTop_ + lp->y_;
      [child layoutWithInt:childLeft withInt:childTop withInt:childLeft + [child getMeasuredWidth] withInt:childTop + [child getMeasuredHeight]];
    }
  }
}

- (bool)checkLayoutParamsWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)p {
  return [p isKindOfClass:[ADAbsoluteLayout_LayoutParams class]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LADViewGroup_LayoutParams;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onMeasureWithInt:withInt:);
  methods[2].selector = @selector(generateDefaultLayoutParams);
  methods[3].selector = @selector(onLayoutWithBoolean:withInt:withInt:withInt:withInt:);
  methods[4].selector = @selector(checkLayoutParamsWithADViewGroup_LayoutParams:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onMeasure", "II", "onLayout", "ZIIII", "checkLayoutParams", "LADViewGroup_LayoutParams;", "LADAbsoluteLayout_LayoutParams;LADAbsoluteLayout_AbsoulteLayout;" };
  static const J2ObjcClassInfo _ADAbsoluteLayout = { "AbsoluteLayout", "r.android.widget", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, 6, -1, -1, -1 };
  return &_ADAbsoluteLayout;
}

@end

void ADAbsoluteLayout_init(ADAbsoluteLayout *self) {
  ADViewGroup_init(self);
}

ADAbsoluteLayout *new_ADAbsoluteLayout_init() {
  J2OBJC_NEW_IMPL(ADAbsoluteLayout, init)
}

ADAbsoluteLayout *create_ADAbsoluteLayout_init() {
  J2OBJC_CREATE_IMPL(ADAbsoluteLayout, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADAbsoluteLayout)

J2OBJC_NAME_MAPPING(ADAbsoluteLayout, "r.android.widget", "AD")

@implementation ADAbsoluteLayout_LayoutParams

- (instancetype)initWithInt:(int32_t)width
                    withInt:(int32_t)height
                    withInt:(int32_t)x
                    withInt:(int32_t)y {
  ADAbsoluteLayout_LayoutParams_initWithInt_withInt_withInt_withInt_(self, width, height, x, y);
  return self;
}

- (instancetype)initWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)source {
  ADAbsoluteLayout_LayoutParams_initWithADViewGroup_LayoutParams_(self, source);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withInt:withInt:);
  methods[1].selector = @selector(initWithADViewGroup_LayoutParams:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IIII", "LADViewGroup_LayoutParams;", "LADAbsoluteLayout;" };
  static const J2ObjcClassInfo _ADAbsoluteLayout_LayoutParams = { "LayoutParams", "r.android.widget", ptrTable, methods, fields, 7, 0x9, 2, 2, 2, -1, -1, -1, -1 };
  return &_ADAbsoluteLayout_LayoutParams;
}

@end

void ADAbsoluteLayout_LayoutParams_initWithInt_withInt_withInt_withInt_(ADAbsoluteLayout_LayoutParams *self, int32_t width, int32_t height, int32_t x, int32_t y) {
  ADViewGroup_LayoutParams_initWithInt_withInt_(self, width, height);
  self->x_ = x;
  self->y_ = y;
}

ADAbsoluteLayout_LayoutParams *new_ADAbsoluteLayout_LayoutParams_initWithInt_withInt_withInt_withInt_(int32_t width, int32_t height, int32_t x, int32_t y) {
  J2OBJC_NEW_IMPL(ADAbsoluteLayout_LayoutParams, initWithInt_withInt_withInt_withInt_, width, height, x, y)
}

ADAbsoluteLayout_LayoutParams *create_ADAbsoluteLayout_LayoutParams_initWithInt_withInt_withInt_withInt_(int32_t width, int32_t height, int32_t x, int32_t y) {
  J2OBJC_CREATE_IMPL(ADAbsoluteLayout_LayoutParams, initWithInt_withInt_withInt_withInt_, width, height, x, y)
}

void ADAbsoluteLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADAbsoluteLayout_LayoutParams *self, ADViewGroup_LayoutParams *source) {
  ADViewGroup_LayoutParams_initWithADViewGroup_LayoutParams_(self, source);
}

ADAbsoluteLayout_LayoutParams *new_ADAbsoluteLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *source) {
  J2OBJC_NEW_IMPL(ADAbsoluteLayout_LayoutParams, initWithADViewGroup_LayoutParams_, source)
}

ADAbsoluteLayout_LayoutParams *create_ADAbsoluteLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *source) {
  J2OBJC_CREATE_IMPL(ADAbsoluteLayout_LayoutParams, initWithADViewGroup_LayoutParams_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADAbsoluteLayout_LayoutParams)

@implementation ADAbsoluteLayout_AbsoulteLayout

- (instancetype)initWithADAbsoluteLayout:(ADAbsoluteLayout *)outer$ {
  ADAbsoluteLayout_AbsoulteLayout_initWithADAbsoluteLayout_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADAbsoluteLayout:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADAbsoluteLayout;" };
  static const J2ObjcClassInfo _ADAbsoluteLayout_AbsoulteLayout = { "AbsoulteLayout", "r.android.widget", ptrTable, methods, NULL, 7, 0x0, 1, 0, 0, -1, -1, -1, -1 };
  return &_ADAbsoluteLayout_AbsoulteLayout;
}

@end

void ADAbsoluteLayout_AbsoulteLayout_initWithADAbsoluteLayout_(ADAbsoluteLayout_AbsoulteLayout *self, ADAbsoluteLayout *outer$) {
  NSObject_init(self);
}

ADAbsoluteLayout_AbsoulteLayout *new_ADAbsoluteLayout_AbsoulteLayout_initWithADAbsoluteLayout_(ADAbsoluteLayout *outer$) {
  J2OBJC_NEW_IMPL(ADAbsoluteLayout_AbsoulteLayout, initWithADAbsoluteLayout_, outer$)
}

ADAbsoluteLayout_AbsoulteLayout *create_ADAbsoluteLayout_AbsoulteLayout_initWithADAbsoluteLayout_(ADAbsoluteLayout *outer$) {
  J2OBJC_CREATE_IMPL(ADAbsoluteLayout_AbsoulteLayout, initWithADAbsoluteLayout_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADAbsoluteLayout_AbsoulteLayout)
